"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var name = "Typescript Project";
console.log("hey ".concat(name));
// type of a variable has bto be the same
var a = 10;
// a = 'hello'; 
a = 20;
//can declare variable without assigning them
var x;
// Static type checking 
// Accurate intellisense
var num1 = 10;
var myName = 'Ayush';
var learningTs = true;
var u = undefined; // undefined variable
var n = null;
var y;
console.log(y);
console.log(n);
//Array
var list1 = [1, 2, 3];
var list2 = [1, 2, 3];
console.log(list1[0]);
//tuple
var tuple1;
tuple1 = [10, 'hello'];
console.log(tuple1[0]);
console.log(tuple1[1]);
//enum
var Color;
(function (Color) {
    Color[Color["Blue"] = 0] = "Blue";
    Color[Color["Green"] = 1] = "Green";
    Color[Color["Red"] = 2] = "Red";
})(Color || (Color = {}));
var c = Color.Red;
console.log(c);
var Fruit;
(function (Fruit) {
    Fruit[Fruit["Apple"] = 5] = "Apple";
    Fruit[Fruit["orange"] = 6] = "orange";
    Fruit[Fruit["Banana"] = 7] = "Banana";
})(Fruit || (Fruit = {}));
var f = Fruit.orange;
console.log(f);
var fruitName = Fruit[7];
console.log(fruitName);
//unknown
//we cant perform any kind of functions with unknown
var notsure = 4;
console.log(notsure);
var doubt;
console.log(doubt);
//any
var anyVal;
anyVal = 'hello';
anyVal = true;
//void
function myFun() {
    console.log('hello');
}
//union types
var peopleAllowed;
peopleAllowed = 10;
peopleAllowed = false;
